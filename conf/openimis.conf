upstream docker-ibackend {
        server ibackend:8000;
}
upstream docker-backend {
        server backend:8000;
}
upstream docker-frontend {
        server frontend:5000;
}
lua_shared_dict sessions 10m;     
server {
        listen 80 default_server;
        server_name NEW_OPENIMIS_HOST;
        return 301 https://$host$request_uri;
}
server {
        listen       443 ssl;
        server_name NEW_OPENIMIS_HOST;

        ssl_certificate /etc/ssl/certs/localhost.crt;
        ssl_certificate_key /etc/ssl/private/localhost.key;


        location /.well-known {
                root /var/www/html;
        }

        location / {
                proxy_pass http://LEGACY_OPENIMIS_HOST;
                proxy_set_header   Host LEGACY_OPENIMIS_HOST;
                proxy_set_header   X-Real-IP $remote_addr;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Host $server_name;
                lua_need_request_body on;
                log_by_lua_file /lua/login_interceptor.lua;                
        }

        location /photos/ {
                proxy_pass http://LEGACY_OPENIMIS_HOST/;
                proxy_set_header   Host LEGACY_OPENIMIS_HOST;
                proxy_set_header   X-Real-IP $remote_addr;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Host $server_name;
        }

        location /Manual/IMIS_manual.pdf {
                proxy_pass http://LEGACY_OPENIMIS_HOST/;
                proxy_set_header   Host LEGACY_OPENIMIS_HOST;
                proxy_set_header   X-Real-IP $remote_addr;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Host $server_name;
        }

        location /keepLegacyAlive {
                proxy_pass http://LEGACY_OPENIMIS_HOST/Images/logo.png;
		proxy_set_header   X-Environment legacy;
                proxy_set_header   Host LEGACY_OPENIMIS_HOST;
                proxy_set_header   X-Real-IP $remote_addr;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Host $host;
        }

        location /logout {
                content_by_lua_file /lua/logout_interceptor.lua;
                return 302 /Logout.aspx;
        }

        location /Home.aspx {
                return 301 /front/;
        }

        location /LegacyHome {
                proxy_pass http://LEGACY_OPENIMIS_HOST/Home.aspx;
                proxy_set_header   Host LEGACY_OPENIMIS_HOST;
                proxy_set_header   X-Real-IP $remote_addr;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Host $server_name;
        }

        location /front/ {
		if ($request_uri ~* /front/(?![Ss]tatic)([^/]+/[^\?]+)(?:\?(.*))? ){
			set_encode_base64 $digest $1;
			rewrite ^/front/.*$ /front/?dyn=$digest;
	        }
                proxy_pass http://docker-frontend/;
                proxy_set_header   Host $host;
                proxy_set_header   X-Real-IP $remote_addr;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Host $server_name;
                access_by_lua_file /lua/security_token_service.lua;
        }

        location /iapi/ {
                proxy_pass http://docker-ibackend/iapi/;
                proxy_set_header   Host $host;
                proxy_set_header   X-Real-IP $remote_addr;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Host $server_name;
                access_by_lua_file /lua/security_token_service.lua;
        }
        
        location /api/ {
                auth_basic "Restricted";
                auth_basic_user_file /conf/.htpasswd;
                proxy_pass http://docker-backend/api/;
                proxy_set_header   Host $host;
                proxy_set_header   X-Real-IP $remote_addr;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Host $server_name;
                proxy_set_header   remote-user $remote_user;
        }
}
