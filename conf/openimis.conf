upstream docker-backend {
        server backend:8000;
}
upstream docker-frontend {
        server frontend:5000;
}

server {
        listen 80 default_server;
        server_name NEW_OPENIMIS_HOST;
        return 301 https://$host$request_uri;
}
server {
        set $dockerbackend "http://backend:8000";
        set $dockerfrontend "http://frontend:5000";
        listen       443 ssl;
        server_name NEW_OPENIMIS_HOST;

        ssl_certificate /etc/ssl/certs/localhost.crt;
        ssl_certificate_key /etc/ssl/private/localhost.key;


        location /.well-known {
                root /var/www/html;
        }

        location / {
                return 302 https://$host/front/;
                #proxy_pass http://LEGACY_OPENIMIS_HOST;
                #proxy_set_header   Host LEGACY_OPENIMIS_HOST;
                #proxy_set_header   X-Real-IP $remote_addr;
                #proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                #proxy_set_header   X-Forwarded-Host $server_name;
        }

        location ~/front/(.*) {
                set_encode_base64 $digest $1;
                proxy_pass http://docker-frontend/$1;
                error_page 404 http://docker-frontend/?dyn=$digest;
                proxy_set_header   Host $host;
                proxy_set_header   X-Real-IP $remote_addr;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Host $server_name;
        }

        location /api/ {
                proxy_pass http://docker-backend/api/;
                proxy_set_header   Host $host;
                proxy_set_header   X-Real-IP $remote_addr;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Host $server_name;
                proxy_set_header   remote-user $remote_user;
        }
}
